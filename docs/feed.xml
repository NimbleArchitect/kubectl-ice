<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.2">Jekyll</generator><link href="https://nimblearchitect.github.io/kubectl-ice/feed.xml" rel="self" type="application/atom+xml" /><link href="https://nimblearchitect.github.io/kubectl-ice/" rel="alternate" type="text/html" /><updated>2023-02-07T16:35:33+00:00</updated><id>https://nimblearchitect.github.io/kubectl-ice/feed.xml</id><title type="html">kubectl-ice</title><subtitle>kubectl-ice cleanly lists all containers in kubernetes pods including init containers you can view running kubernetes  information about the multi-container pods to assist in troubleshooting and information gathering</subtitle><author><name>NimbleArchitect</name></author><entry><title type="html">New Release V0.2.11</title><link href="https://nimblearchitect.github.io/kubectl-ice/release/2023/02/07/release-v0.2.11.html" rel="alternate" type="text/html" title="New Release V0.2.11" /><published>2023-02-07T12:48:48+00:00</published><updated>2023-02-07T12:48:48+00:00</updated><id>https://nimblearchitect.github.io/kubectl-ice/release/2023/02/07/release-v0.2.11</id><content type="html" xml:base="https://nimblearchitect.github.io/kubectl-ice/release/2023/02/07/release-v0.2.11.html">&lt;p&gt;Kubectl v0.2.11 has been released!&lt;/p&gt;

&lt;p&gt;Its been a while since the previous release (I have been working on other projects) but I have finally added colours to the table output of ice “woohoo”, please bear in mind I have only tested this on linux so it might break the output on other systems (if it does then please raise a ticket detailing the comand you used, your os and a screen grab of the output) and yes I know it looks like I’m mixing the spelling of colour with color but I set the flag to the Americian spelling as thats what im used to when working on the command line and the most common spelling across various other programs, I grew up in london so alwas spelt using the queens english.&lt;/p&gt;

&lt;p&gt;The new &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--colors argument&lt;/code&gt; flag lets you colour the output based on a provided string, doing this allows the us to choose the one we prefer if your a fan of having each column a different colour, you can using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;columns&lt;/code&gt; argument. if on the other had you only want to colour to help identify which resources in the cpu output are above 75% used then you can use the  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;errors&lt;/code&gt; argument which displays 0-74% in green, 75-89% in yellow and 90-100% as red, anything left in the base colour means ice was unable to collect enough data to make an assumption (or I messed up the code somewhere). I then decided it would be nice to allow mixing of the above schemes so I added the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mix&lt;/code&gt; argument which sets colours as columns but then adds the green/yellow/red to percentages and states as needed, giving more of a blended look to the output&lt;/p&gt;

&lt;p&gt;On top of the above arguments I also decided it would be useful to allow users to specify there own colour schemes, so I added the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;custom&lt;/code&gt; argument this is a “;” seperated list with each element being x.y with x being the modifier (bold/underline/flashing) and y being the colour (these are standard ansi colour codes). I’ll add the colour table below.  While I was testing this I also added the ability to change the good/warn/bad colours by prefixing the custom colour with “g”, “w” and “b”, which when detected ice switches to an internal custom mix setting so it can display the table with a custom colour in each column whilst also changing the errors colour for a few % related columns.&lt;/p&gt;

&lt;p&gt;you can also set the environment variable ICE_COLOR to argument so ice will always use that unless overridden using the color flag&lt;/p&gt;

&lt;h3 id=&quot;colour-codes&quot;&gt;Colour codes&lt;/h3&gt;
&lt;p&gt;Default		 39
Black		 30	
Dark red	 31	
Dark green	 32	
Dark yellow  33	
Dark blue	 34	
Dark magenta 35	
Dark cyan	 36	
Light gray	 37	
Dark gray	 90	
Red		     91	
Green		 92	
Orange		 93	
Blue		 94	
Magenta		 95	
Cyan		 96	
White		 97&lt;/p&gt;

&lt;h3 id=&quot;modifiers&quot;&gt;Modifiers&lt;/h3&gt;
&lt;p&gt;brighter     1
underlined   4
flashing     5&lt;/p&gt;

&lt;h3 id=&quot;examples&quot;&gt;Examples&lt;/h3&gt;
&lt;p&gt;each column is a different colour&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kubectl-ice status &lt;span class=&quot;nt&quot;&gt;--color&lt;/span&gt; column
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;choosing the colour of each column (colours repeat if there are more columns than colours) in this case the colours are blue, magenta, cyan, blue, magenta, cyan, etc&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kubectl-ice status &lt;span class=&quot;nt&quot;&gt;--color&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;custom;0.94;0.95;0.96&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;showing the columns in colour with cpu usage coloured as good (green), warning (yellow) and bad (red)&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kubectl-ice cpu &lt;span class=&quot;nt&quot;&gt;--color&lt;/span&gt; mix
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and finally memory output with custom colours for each column but warning is flashing yellow and bad is flashing red&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kubectl-ice memory &lt;span class=&quot;nt&quot;&gt;--colour&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;custom;0.33;0.34;0.35;0.36;0.90;0.93;0.94;g1.92;w5.33;b5.91&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;in the above command the “w5.33” the w means to set the warning colour 5 is flash the text and 33 is the colour yellow&lt;/p&gt;

&lt;p&gt;as usual full details are in the documentation&lt;/p&gt;

&lt;p&gt;NimbleArchitect&lt;/p&gt;</content><author><name>NimbleArchitect</name></author><category term="Release" /><summary type="html">Kubectl v0.2.11 has been released!</summary></entry><entry><title type="html">New Release V0.2.10</title><link href="https://nimblearchitect.github.io/kubectl-ice/release/2022/09/19/release-v0.2.10.html" rel="alternate" type="text/html" title="New Release V0.2.10" /><published>2022-09-19T11:36:13+01:00</published><updated>2022-09-19T11:36:13+01:00</updated><id>https://nimblearchitect.github.io/kubectl-ice/release/2022/09/19/release-v0.2.10</id><content type="html" xml:base="https://nimblearchitect.github.io/kubectl-ice/release/2022/09/19/release-v0.2.10.html">&lt;p&gt;Kubectl v0.2.10 released, this release is another bug fix to re-hide init containers from the cpu and memory sub commands, if you need to see the init containers use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-i&lt;/code&gt; of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--include-init&lt;/code&gt; flags&lt;/p&gt;</content><author><name>NimbleArchitect</name></author><category term="Release" /><summary type="html">Kubectl v0.2.10 released, this release is another bug fix to re-hide init containers from the cpu and memory sub commands, if you need to see the init containers use the -i of --include-init flags</summary></entry><entry><title type="html">New Release V0.2.9</title><link href="https://nimblearchitect.github.io/kubectl-ice/release/2022/09/16/release-v0.2.9.html" rel="alternate" type="text/html" title="New Release V0.2.9" /><published>2022-09-16T13:22:37+01:00</published><updated>2022-09-16T13:22:37+01:00</updated><id>https://nimblearchitect.github.io/kubectl-ice/release/2022/09/16/release-v0.2.9</id><content type="html" xml:base="https://nimblearchitect.github.io/kubectl-ice/release/2022/09/16/release-v0.2.9.html">&lt;p&gt;I have just released Kubectl v0.2.9, this release is just a bug fix for the lifecycle command and support for go v1.19&lt;/p&gt;</content><author><name>NimbleArchitect</name></author><category term="Release" /><summary type="html">I have just released Kubectl v0.2.9, this release is just a bug fix for the lifecycle command and support for go v1.19</summary></entry><entry><title type="html">New Release V0.2.8</title><link href="https://nimblearchitect.github.io/kubectl-ice/release/2022/08/19/release-v0.2.8.html" rel="alternate" type="text/html" title="New Release V0.2.8" /><published>2022-08-19T17:47:54+01:00</published><updated>2022-08-19T17:47:54+01:00</updated><id>https://nimblearchitect.github.io/kubectl-ice/release/2022/08/19/release-v0.2.8</id><content type="html" xml:base="https://nimblearchitect.github.io/kubectl-ice/release/2022/08/19/release-v0.2.8.html">&lt;p&gt;Kubectl v0.2.8 has just been released, this release adds support for reading from yaml files along with reading from stdin, it also adds the –column flag which allows you to specify which columns should be shown in the output.&lt;/p&gt;

&lt;p&gt;First lets talk about the -f flag, I added it initially as it helped when testing new ideas but quickly realised it could be beneficial to others when I started exploring the image and capabilities commands. I actually found it really cool to be able to read a list of image names from yaml files without having to resort to opening the file or using grep to get the image list. With that in place it was a no-brainer to to add the ability to read piped data so it could be used with helm&lt;/p&gt;

&lt;p&gt;which then allows things like this:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;helm template mychart | kubectl-ice image
helm get manifest mychart | kubectl-ice image
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Currently I envision this as more of a safety check in a pipeline or maybe even used in a reporting process to list the ports or images used, when combined with the column flag below it has the potential to be very powerful and useful but only time will tell…&lt;/p&gt;

&lt;p&gt;Next up is the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--columns&lt;/code&gt; flag, which when specified this flag accept a comma separated list of column names to show, the advantage here is only those specified columns are shown in the table output and you can specify any valid column even those that are hidden by default, given the image command you could create something like&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kubectl-ice image --columns podname,image,imageid
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;would show a list of pod names with the image name and along with the sha of the image
the only down side of this is that the column order is set but the program and now the user so you have no control over the column order.&lt;/p&gt;

&lt;p&gt;That’s me for now and I hope this has been useful.&lt;/p&gt;

&lt;p&gt;NimbleArchitect&lt;/p&gt;</content><author><name>NimbleArchitect</name></author><category term="Release" /><summary type="html">Kubectl v0.2.8 has just been released, this release adds support for reading from yaml files along with reading from stdin, it also adds the –column flag which allows you to specify which columns should be shown in the output.</summary></entry><entry><title type="html">At long last!</title><link href="https://nimblearchitect.github.io/kubectl-ice/site/2022/08/16/welcome.html" rel="alternate" type="text/html" title="At long last!" /><published>2022-08-16T18:42:24+01:00</published><updated>2022-08-16T18:42:24+01:00</updated><id>https://nimblearchitect.github.io/kubectl-ice/site/2022/08/16/welcome</id><content type="html" xml:base="https://nimblearchitect.github.io/kubectl-ice/site/2022/08/16/welcome.html">&lt;p&gt;I finally did it… I finally managed to get around to creating a site for kubectl-ice, its taken about 4 weeks so far to get to this stage but for the time being it will be a work in progress, it should hold all the needed information about ice though so if you notice any mistakes or issues please do let me know.&lt;/p&gt;</content><author><name>NimbleArchitect</name></author><category term="site" /><summary type="html">I finally did it… I finally managed to get around to creating a site for kubectl-ice, its taken about 4 weeks so far to get to this stage but for the time being it will be a work in progress, it should hold all the needed information about ice though so if you notice any mistakes or issues please do let me know.</summary></entry></feed>