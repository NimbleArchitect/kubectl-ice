apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-volume-2
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-claim-2
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi

---
apiVersion: v1
kind: Pod
metadata:
  name: web-pod-vol
  labels:
    app: myappvol
spec:
  initContainers:
  - name: app-init
    image: busybox:1.28
    command: ['sh', '-c', "sleep 2; exit 0"]

  containers:
  - name: app-watcher
    image: python:latest
    command: ['python', '/myapp/mainapp.py']
    ports:
      - containerPort: 80
    resources:
      requests:
        cpu: "1m"
        memory: "1M"
      limits:
        cpu: 1m
        memory: 512M
    volumeMounts:
      - name: app
        mountPath: /myapp/
  - name: app-broken
    image: nginx:1.7.9
    command: ['sh', '-c', "sleep 2; exit 1"]
    ports:
    - containerPort: 80
    resources:
      requests:
        cpu: "1m"
        memory: "1M"
      limits:
        cpu: 1m
        memory: 512M
    # volumeDevices:
    # - devicePath: /mnt/localmount
    #   name: pvc-claim-2
  - name: myapp
    # image: busybox:1.28
    # command: ['sh', '-c', "sleep 999; exit 0"]
    image: python:latest
    command: ['python', '/myapp/mainapp.py']
    volumeMounts:
      - name: app
        mountPath: /myapp/
    ports:
    - containerPort: 80
    resources:
      requests:
        cpu: "1m"
        memory: "1M"
      limits:
        cpu: 1m
        memory: 256M
    lifecycle:
      postStart:
        httpGet:
          path: /index.html
          port: 80
          host: localhost
          scheme: HTTP
  volumes:
  - name: app
    configMap:
      name: app.py
      defaultMode: 0777
      items:
      - key: singlepod
        path: mainapp.py
  # - name: pvc-claim-2 
  #   persistentVolumeClaim: 
  #     claimName: pvc-claim-2
      